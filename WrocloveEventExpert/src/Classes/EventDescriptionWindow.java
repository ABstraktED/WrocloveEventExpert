/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Classes;

import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author ABstraktED
 */
public class EventDescriptionWindow extends javax.swing.JFrame {

    /**
     * Creates new form EventDescriptionWindow
          
     */
    
    public EventDescriptionWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventName = new javax.swing.JLabel();
        eventStreet = new javax.swing.JLabel();
        whereLabel = new javax.swing.JLabel();
        eventDescriptionScrollPane = new javax.swing.JScrollPane();
        eventDescription = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("Event Description"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(300, 350));

        eventName.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        eventName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eventName.setText("Name of the event");
        eventName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        eventStreet.setText("Event street");

        whereLabel.setText("Where: ");

        eventDescriptionScrollPane.setEnabled(false);

        eventDescription.setEditable(false);
        eventDescription.setBackground(javax.swing.UIManager.getDefaults().getColor("ColorChooser.background"));
        eventDescription.setColumns(20);
        eventDescription.setLineWrap(true);
        eventDescription.setRows(5);
        eventDescription.setWrapStyleWord(true);
        eventDescriptionScrollPane.setViewportView(eventDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(whereLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventStreet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(eventDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eventName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventDescriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventStreet)
                    .addComponent(whereLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventDescriptionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventDescriptionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventDescriptionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventDescriptionWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventDescriptionWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea eventDescription;
    public static javax.swing.JScrollPane eventDescriptionScrollPane;
    public static javax.swing.JLabel eventName;
    public static javax.swing.JLabel eventStreet;
    public static javax.swing.JLabel whereLabel;
    // End of variables declaration//GEN-END:variables

    public static void setEventName(String eventName){
       EventDescriptionWindow.eventName.setText(eventName);
    }
    
    public static void setEventDesription(String eventDescription){
        EventDescriptionWindow.eventDescription.append(eventDescription);
    }
    
    public static void setEventStreet(String eventStreet){
       EventDescriptionWindow.eventStreet.setText(eventStreet);
    }
}
